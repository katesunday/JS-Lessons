{"version":3,"sources":["lessons/lesson5/lesson5.ts","App.tsx","redux/actions.ts","redux/currencyReducer.ts","redux/state.ts","index.tsx"],"names":["console","log","someObj","name","age","greeting","this","counter","count","getCurrentCount","increment","decrement","setCurrentCount","num","restCurrentCount","MyFirstConstructorFunc","prototype","newObj","One","Two","sayHello","bind","call","helperObj","changeName","setAge","x","sum","y","apply","App","ACTIONS_TYPE","className","initialState","currencies","currencyName","buyRate","sellRate","currentCurrency","isBuying","amountOfBYN","amountOfCurrency","reducers","combineReducers","currency","state","action","type","CHANGE_CURRENCY_FIELD_TYPE","payload","CHANGE_CHANGE_ACTION","CHANGE_CURRENT_CURRENCY","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"sNAAAA,QAAQC,IAAI,YA8JZ,IAAIC,EAAuB,CACvBC,KAAM,SACNC,IAAK,IAGT,SAASC,IAEL,MAAM,cAAN,OAAqBC,KAAKH,KAA1B,kBAAwCG,KAAKF,KAIjDF,EAAQG,SAAWA,EAEnBL,QAAQC,IAAR,WAAyBC,EAAQG,YAWjC,IAAIE,EAAU,CACVC,MAAO,EACPC,gBAFU,WAGN,OAAOH,KAAKE,OAEhBE,UALU,WAMN,OAAOJ,KAAKE,OAAS,GAEzBG,UARU,WASN,OAAOL,KAAKE,OAAS,GAEzBI,gBAXU,SAWMC,GACZ,OAAOP,KAAKE,MAAQK,GAExBC,iBAdU,WAeN,OAAOR,KAAKE,MAAQ,IAG5BR,QAAQC,IAAR,eAA6BM,EAAQK,gBAAgB,IACrDZ,QAAQC,IAAR,eAA6BM,EAAQE,mBACrCT,QAAQC,IAAR,gBAA8BM,EAAQI,aACtCX,QAAQC,IAAR,gBAA8BM,EAAQG,aACtCV,QAAQC,IAAR,gBAA8BM,EAAQO,oBAmCrC,SAASC,EAAuBZ,EAAYC,GAQxC,OANAE,KAAKH,KAAOA,EAEZG,KAAKF,IAAMA,EAIJE,KAfZN,QAAQC,IAAR,iBAtBe,CACXO,MAAO,EACPC,gBAFW,WAGP,OAAOH,KAAKE,OAEhBE,UALW,WAOP,OADAJ,KAAKE,OAAS,EACPF,MAEXK,UATW,WAWP,OADAL,KAAKE,OAAS,EACPF,MAEXM,gBAbW,SAaKC,GAEZ,OADAP,KAAKE,MAAQK,EACNP,MAEXQ,iBAjBW,WAmBP,OADAR,KAAKE,MAAQ,EACNF,OAIFM,gBAAgB,IAAIF,YAAYA,YAAYA,YAAYC,YAAYF,mBAgBjFM,EAAuBC,UAAUX,SAAWA,EAE5C,IAAIY,EAAU,IAAIF,EAAuB,OAAO,IAChDf,QAAQC,IAAR,UAAwBgB,EAAQA,EAAOZ,YACvCL,QAAQC,IAAIgB,aAAkBF,GAI9B,IAAIG,EAAM,CAACf,KAAM,OACbgB,EAAM,CACNhB,KAAM,MACNiB,SAAU,WACNpB,QAAQC,IAAR,4BAAiCK,KAAKH,SAG9CH,QAAQC,IAAR,aACAkB,EAAIC,SAASC,KAAKH,EAAlBC,GACAA,EAAIC,SAASE,KAAKJ,GASlB,IAAIK,EAAY,CAEZC,WAFY,SAEDrB,GAEP,OAAOG,KAAKH,KAAOA,GAGvBsB,OAPY,SAOLrB,GAEH,OAAOE,KAAKF,IAAMA,IAK1BmB,EAAUlB,SAAWc,EAAIC,SACzBpB,QAAQC,IAAR,WAAwBsB,EAAUC,WAAW,UAE7CD,EAAUlB,WAoBV,IAVwDqB,EAWlDC,GAXkDD,EAUrB,EARK,SAACE,GACnC,OAAQA,EAAEF,IAQF,GAEd1B,QAAQC,IAAI,MAAM0B,GASlB3B,QAAQC,IAAI,oBAAoBsB,EAAUC,WAAWF,KAAKJ,EAAI,SAI9DlB,QAAQC,IAAI,eAAesB,EAAUC,WAAWK,MAAMX,EAAI,CAAC,SAASA,GAGpElB,QAAQC,IAAI,oBAAoBiB,EAAKA,EAAIf,MAGzCH,QAAQC,IAAI,oBAAoBsB,EAAUE,OAAOH,KAAKH,EAAI,IAAIA,GAI9DnB,QAAQC,IAAI,cAEZsB,EAAUlB,SAASiB,KAAKH,GC9TTW,ICtBHC,EDsBGD,EAVf,WACI,OACI,qBAAKE,UAAU,e,gCCdXD,K,yEAAAA,E,6DAAAA,E,oEAAAA,M,KAgBL,ICCDE,EAA8B,CAChCC,WAAY,CACR,CACIC,aAAc,MACdC,QAAS,KACTC,SAAU,MAEd,CACIF,aAAc,MACdC,QAAS,IACTC,SAAU,MAEd,CACIF,aAAc,MACdC,QAAS,MACTC,SAAU,QAGlBC,gBAAiB,MACjBC,UAAU,EACVC,YAAa,GACbC,iBAAkB,ICnChBC,EAAWC,YAAgB,CAC7BC,SDqC2B,WAAyF,IAAxFC,EAAuF,uDAAhEZ,EAAea,EAAiD,uCAEnH,OAAQA,EAAOC,MAEX,KAAKhB,EAAaiB,2BACd,OAAO,2BACAH,GACAC,EAAOG,SAElB,KAAKlB,EAAamB,qBAClB,KAAKnB,EAAaoB,wBACd,OAAO,uCAEAN,GACAC,EAAOG,SAHd,IAKIT,YAAa,GACbC,iBAAkB,KAE1B,QACI,OAAOI,MCrDNO,EAAQC,YAAYX,GCDjCY,IAASC,OACL,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACI,cAAC,EAAD,MAEJI,SAASC,eAAe,W","file":"static/js/main.9b85f34d.chunk.js","sourcesContent":["console.log('Lesson 5');\r\n\r\n// Keyword - this\r\n// https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/this\r\n// https://learn.javascript.ru/object-methods\r\n// https://habr.com/ru/company/ruvds/blog/419371/\r\n// https://www.youtube.com/watch?v=aQkgUUmUJy4&list=PLqKQF2ojwm3l4oPjsB9chrJmlhZ-zOzWT\r\n\r\n// А тут заходим и ставим лайк!!!\r\n// https://www.youtube.com/watch?v=T1vJ8OdJq0o\r\n\r\n// https://www.youtube.com/watch?v=xY-mwUzDjsk\r\n\r\n// Keyword - new. Function-constructor\r\n// https://learn.javascript.ru/constructor-new\r\n// https://metanit.com/web/javascript/4.5.php\r\n// https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/new\r\n\r\n// Call, Apply, Bind\r\n// https://learn.javascript.ru/call-apply-decorators\r\n// https://medium.com/@stasonmars/%D0%BF%D0%BE%D0%B4%D1%80%D0%BE%D0%B1%D0%BD%D0%BE-%D0%BE-%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D0%B0%D1%85-apply-call-%D0%B8-bind-%D0%BD%D0%B5%D0%BE%D0%B1%D1%85%D0%BE%D0%B4%D0%B8%D0%BC%D1%8B%D1%85-%D0%BA%D0%B0%D0%B6%D0%B4%D0%BE%D0%BC%D1%83-javascript-%D1%80%D0%B0%D0%B7%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D1%87%D0%B8%D0%BA%D1%83-ddd5f9b06290\r\n\r\n// let obj = {name: 'Eugene'}\r\n// let obj2 = {name: 'Julia'}\r\n//\r\n// function f() {\r\n//     // @ts-ignore\r\n//     console.log('this in f' , this)\r\n// }\r\n//\r\n// // @ts-ignore\r\n// obj.f = f;\r\n// // @ts-ignore\r\n// obj2.f = obj.f\r\n// // @ts-ignore\r\n// obj2.f() // сошлется на юлю\r\n//потому что Ф это фанкш декларейшн(даже если фанкшн икспрешн по типу ф.декл)!!, значит правило this равен объекту до точки\r\n\r\n//Function expression by type named function declaration\r\n//переменна тест будет доступна только внутри ф2 для рекурсии\r\n// let count = 0;\r\n// // @ts-ignore\r\n// let f2 = function test() {\r\n//     if (count === 1) return;\r\n//     count++\r\n//     console.log('count' , count)\r\n//     return test()\r\n//     //return f()\r\n// }\r\n// let v = f2;\r\n// // @ts-ignore\r\n// f2 = null;\r\n// v()//will be error\r\n\r\n// let obj = {\r\n//     name:'masha',\r\n//     f(){\r\n//         console.log(`this in f`, this);\r\n//         (function inner(){\r\n//             // @ts-ignore\r\n//             console.log(`this in inner`, this)\r\n//         })()\r\n//     }\r\n// }\r\n// let obj2 = {\r\n//     name:'sasha'\r\n// }\r\n// obj.f()// this1 = obj, this2 = window\r\n\r\n// let obj = {\r\n//     name:'masha',\r\n//     f(){\r\n//         console.log(`this in f`, this);\r\n//         return function inner(){\r\n//             // @ts-ignore\r\n//             console.log(`this in inner`, this)\r\n//         }\r\n//     }\r\n// }\r\n// let obj2 = {\r\n//     name:'sasha'\r\n// }\r\n// // @ts-ignore\r\n// obj2.f = obj.f(); // obj masha\r\n// // @ts-ignore\r\n// obj2.f() //sasha\r\n\r\n// let obj = {\r\n//     name:'masha',\r\n//     f(){\r\n//         console.log(`this in f`, this);\r\n//         return function inner(){\r\n//             // @ts-ignore\r\n//             console.log(`this in inner`, this)\r\n//         }\r\n//     }\r\n// }\r\n// let obj2 = {\r\n//     name:'sasha'\r\n// }\r\n// // @ts-ignore\r\n// const outer = obj.f(); // obj masha\r\n// // @ts-ignore\r\n// outer() //window\r\n\r\n// let obj = {\r\n//     name:'masha',\r\n//     f(){\r\n//         console.log(`this in f`, this);\r\n//         return function inner(){\r\n//             // @ts-ignore\r\n//             console.log(`this in inner`, this)\r\n//         }\r\n//     }\r\n// }\r\n// let obj2 = {\r\n//     name:'sasha'\r\n// }\r\n// let obj3 = {\r\n//     name:'sasha',\r\n//     innerObj:{\r\n//         name:'Bla'\r\n//     }\r\n// }\r\n// // @ts-ignore\r\n// obj3.innerObj.f =  obj.f(); // obj masha\r\n// // @ts-ignore\r\n// obj3.innerObj.f() //bla\r\n\r\n// let obj = {\r\n//     name:'Eugene',\r\n// }\r\n// let obj2 = {\r\n//     name: 'Julia' ,\r\n//     a() {\r\n//         return () => {\r\n//             console.log(`this in arrow` , this)\r\n//         }\r\n//     }\r\n// }\r\n// //@ts-ignore\r\n// obj.a  = obj2.a() //obj.a = рельзультату вызова obj2.a\r\n// //а this срелочной функции определился в момент ее объявления\r\n// //а объявлена она на 142 строке\r\n// //@ts-ignore\r\n// obj.a();\r\n\r\n//Если в ф. конструкторе указать явный return [smth], то вернется объект из ретурна\r\n\r\n// Task 01\r\n// Дан объект someObj, реализуйте функцию greeting и присвойте ее ключу объекта с аналогичным именем.\r\n// Функция должна вернуть строку `My name is ${name}. I am ${age}`, где name и age берутся из свойств объекта\r\n\r\ntype someObjType = {\r\n    name: string;\r\n    age: number;\r\n}\r\n\r\nlet someObj: someObjType = {\r\n    name: 'Eugene' ,\r\n    age: 32\r\n}\r\n\r\nfunction greeting() {\r\n    // @ts-ignore\r\n    return `My name is ${this.name}. I am ${this.age}`\r\n}\r\n\r\n// @ts-ignore\r\nsomeObj.greeting = greeting\r\n// @ts-ignore\r\nconsole.log(`Task 1: ` , someObj.greeting())\r\n\r\n\r\n// Task 02\r\n// реализовать счетчик counter в виде объекта со следующими методами:\r\n// get current count; - выводит текущее значение счетчика\r\n// increment; - увеличивает значение счетчика на 1\r\n// decrement; - уменьшает значение счетчика на 1\r\n// set current count; - принимает и присваивает значение счетчику\r\n// rest current count - устанавливает значение счетчика равным 0\r\n// все методы должны ссылаться на сам объект\r\nlet counter = {\r\n    count: 0 ,\r\n    getCurrentCount() {\r\n        return this.count\r\n    } ,\r\n    increment() {\r\n        return this.count += 1\r\n    } ,\r\n    decrement() {\r\n        return this.count -= 1\r\n    } ,\r\n    setCurrentCount(num: number) {\r\n        return this.count = num\r\n    } ,\r\n    restCurrentCount() {\r\n        return this.count = 0\r\n    }\r\n}\r\nconsole.log(`Task 2 set: ` , counter.setCurrentCount(4))\r\nconsole.log(`Task 2 get: ` , counter.getCurrentCount())\r\nconsole.log(`Task 2 decr: ` , counter.decrement())\r\nconsole.log(`Task 2 incr: ` , counter.increment())\r\nconsole.log(`Task 2 rest: ` , counter.restCurrentCount())\r\n\r\n\r\n// Task 03\r\n// переделайте код из Task 02, что бы сработал следующий код:\r\n// counter.setCurrentCount(10).increment().increment().increment().decrement().getCurrentCount() // 12\r\nlet counter2 = {\r\n    count: 0 ,\r\n    getCurrentCount() {\r\n        return this.count\r\n    } ,\r\n    increment() {\r\n        this.count += 1\r\n        return this\r\n    } ,\r\n    decrement() {\r\n        this.count -= 1\r\n        return this\r\n    } ,\r\n    setCurrentCount(num: number) {\r\n        this.count = num\r\n        return this\r\n    } ,\r\n    restCurrentCount() {\r\n        this.count = 0\r\n        return this\r\n    }\r\n}\r\nconsole.log(`Task 3 //12 : ` ,\r\n    counter2.setCurrentCount(10).increment().increment().increment().decrement().getCurrentCount())\r\n\r\n// Task 04\r\n// Написать функцию конструктор myFirstConstructorFunc которая принимает 2 параметра name и age\r\n// и возвращает объект\r\n// у которого будут эти свойства и метод greeting из Task 01\r\n function MyFirstConstructorFunc(name:string,age:number){\r\n     // @ts-ignore\r\n     this.name = name\r\n     // @ts-ignore\r\n     this.age = age\r\n     // @ts-ignore\r\n     //this.greeting = greeting\r\n     // @ts-ignore\r\n     return this\r\n }\r\nMyFirstConstructorFunc.prototype.greeting = greeting;\r\n// @ts-ignore\r\nlet newObj  = new MyFirstConstructorFunc('olga',14)\r\nconsole.log(`Task4: `,  newObj, newObj.greeting())\r\nconsole.log(newObj instanceof MyFirstConstructorFunc)\r\n\r\n// Task 05 есть 2 объекта One и Two. С помощью bind и метода sayHello заставьте поздороваться объект One\r\n\r\nlet One = {name: 'One'};\r\nlet Two = {\r\n    name: 'Two' ,\r\n    sayHello: function () {\r\n        console.log(`Hello, my name is ${this.name}`)\r\n    }\r\n};\r\nconsole.log(`Task 05: `)\r\nTwo.sayHello.bind(One)()\r\nTwo.sayHello.call(One)\r\n\r\n// Task 06\r\n// создайте объект helperObj у которого есть следующие методы:\r\n// changeName - меняет значение у свойства name объекта на полученное значение\r\n// setAge - устанавливает полученное значение в свойство age объекта\r\n// greeting - используется функция sayHello из Task 05\r\n// можно использовать @ts-ignore\r\n\r\nlet helperObj = {\r\n    // @ts-ignore\r\n    changeName(name:string){\r\n        // @ts-ignore\r\n        return this.name = name\r\n    },\r\n    // @ts-ignore\r\n    setAge(age:number){\r\n        // @ts-ignore\r\n        return this.age = age\r\n    },\r\n   // greeting: Two.sayHello\r\n}\r\n// @ts-ignore\r\nhelperObj.greeting = Two.sayHello\r\nconsole.log(`Task 6: `, helperObj.changeName('masha'))\r\n// @ts-ignore\r\nhelperObj.greeting()\r\n\r\n// Bind\r\n// 1) Дана функция sumTwoNumbers, реализовать функцию bindNumber которая\r\n// принимает функцию sumTwoNumbers и число, и\r\n// возвращает другую функцию, которое также принимает число и возвращает\r\n// сумму этих чисел. Замыкание использовать нельзя\r\nfunction sumTwoNumbers(a: number , b: number): number {\r\n    return a + b\r\n};\r\nfunction bindNumber(foo:(a: number , b: number)=>number,x:number){\r\n\r\n    const someFunc:(y:number)=>number = (y)=>{\r\n      return  y+x\r\n    }\r\n    return   someFunc\r\n    //someFunc.bind(x)\r\n\r\n\r\n}\r\nconst f = bindNumber(sumTwoNumbers,5)\r\nconst sum = f(1)\r\n// @ts-ignore\r\nconsole.log('sum',sum)\r\n\r\n\r\n// 2) Напишите функцию которая принимает первым аргументом объект One, а вторым helperObj. Данная функция\r\n// возвращает другую функцию которая принимает строку в качестве аргумента и устанавливает\r\n// ее свойству name объекта One\r\n\r\n\r\n\r\nconsole.log('additional task 2',helperObj.changeName.call(One,'dima'))\r\n// @ts-ignore\r\n//???????????????\r\n\r\nconsole.log('apply task 2',helperObj.changeName.apply(One,['zina']),One)\r\n     //One.name  = helperObj.changeName.bind(One,'dima')\r\n// @ts-ignore\r\nconsole.log('additional task 2',One, One.name)\r\n\r\n// 3) Одной строкой установить с помощью helperObj объекту Two поле age в значение 30\r\nconsole.log('additional task 3',helperObj.setAge.call(Two,30),Two)\r\n// 4) Создать метод hi у объекта One, который всегда вызывает метод greeting\r\n// объекта helperObj от имени Two\r\n\r\nconsole.log('add task 4')\r\n// @ts-ignore\r\nhelperObj.greeting.call(Two)\r\n\r\n\r\n// @ts-ignore\r\n//One.hi()\r\n// Реализовать задачи 2-4 из Bind с помощью Call\r\n\r\n\r\n// just a plug\r\nexport default () => {\r\n};","import React from 'react';\r\nimport './App.css';\r\nimport Lesson1 from './lessons/lesson1/lesson1';\r\n// import './lessons/lesson2/lesson2';\r\nimport Lesson3 from \"./lessons/lesson3/Lesson3\";\r\n// import Lesson3 from './lessons/lesson3/Lesson3';\r\nimport Lesson4 from './lessons/lesson4/Lesson4';\r\nimport './lessons/lesson5/lesson5';\r\n// import './lessons/lesson6/lesson6';\r\n// import './lessons/lesson7/lesson7';\r\n// import './lessons/lesson8/lesson8';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"container\">\r\n            {/*<Lesson1 />*/}\r\n            {/*<Lesson3 />*/}\r\n            {/*<Lesson4 />*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","export enum ACTIONS_TYPE {\r\n    CHANGE_CURRENCY_FIELD_TYPE = 'CurrencyExchange/CHANGE_CURRENCY_FIELD_TYPE',\r\n    CHANGE_CHANGE_ACTION = 'CurrencyExchange/CHANGE_CHANGE_ACTION',\r\n    CHANGE_CURRENT_CURRENCY = 'CurrencyExchange/CHANGE_CURRENT_CURRENCY',\r\n}\r\n\r\n\r\nexport type ChangeCurrencyFieldType = {\r\n    type:ACTIONS_TYPE.CHANGE_CURRENCY_FIELD_TYPE,\r\n    payload:{\r\n        amountOfBYN: string,\r\n        amountOfCurrency: string,\r\n    },\r\n};\r\n\r\n\r\nexport const ChangeCurrencyFieldAC = (amountOfBYN: string, amountOfCurrency: string): ChangeCurrencyFieldType => {\r\n  return {\r\n      type: ACTIONS_TYPE.CHANGE_CURRENCY_FIELD_TYPE ,\r\n      payload: {amountOfBYN , amountOfCurrency}\r\n  }\r\n\r\n};\r\n\r\nexport type ChangeAction = {\r\n    type:ACTIONS_TYPE.CHANGE_CHANGE_ACTION,\r\n    payload: {isBuying:boolean }\r\n};\r\n\r\n\r\nexport const ChangeActionAC = (isBuying: boolean): ChangeAction => {\r\nreturn {\r\n    type:ACTIONS_TYPE.CHANGE_CHANGE_ACTION,\r\n    payload:{isBuying},\r\n}\r\n};\r\n\r\nexport type ChangeCurrentCurrencyType = {\r\n    type:ACTIONS_TYPE.CHANGE_CURRENT_CURRENCY,\r\n    payload:{currentCurrency: string},\r\n};\r\n\r\n// @ts-ignore\r\nexport const ChangeCurrentCurrencyAC = (currentCurrency: string): ChangeCurrentCurrencyType => {\r\n    return {\r\n        type:ACTIONS_TYPE.CHANGE_CURRENT_CURRENCY,\r\n        payload:{currentCurrency}\r\n    }\r\n};\r\n\r\nexport type CurrencyReducersTypes = ChangeCurrencyFieldType | ChangeAction | ChangeCurrentCurrencyType;","import {ACTIONS_TYPE , CurrencyReducersTypes} from './actions';\r\nimport {IGlobalState} from \"./state\";\r\n\r\n\r\nexport type CurrencyType = {\r\n    currencyName: string;\r\n    buyRate: number;\r\n    sellRate: number;\r\n};\r\nexport type CurrencyState = {\r\n    currencies: Array<CurrencyType>;\r\n    currentCurrency: string;\r\n    isBuying: boolean;\r\n    amountOfBYN: string;\r\n    amountOfCurrency: string;\r\n};\r\n\r\nconst initialState: CurrencyState = {\r\n    currencies: [\r\n        {\r\n            currencyName: 'USD' ,\r\n            buyRate: 2.62 ,\r\n            sellRate: 2.58 ,\r\n        } ,\r\n        {\r\n            currencyName: 'EUR' ,\r\n            buyRate: 3.1 ,\r\n            sellRate: 3.06 ,\r\n        } ,\r\n        {\r\n            currencyName: 'RUR' ,\r\n            buyRate: 0.0345 ,\r\n            sellRate: 0.0341 ,\r\n        } ,\r\n    ] ,\r\n    currentCurrency: 'USD' ,\r\n    isBuying: true ,\r\n    amountOfBYN: '' ,\r\n    amountOfCurrency: '' ,\r\n};\r\n\r\nexport const currencyReducer = (state: CurrencyState = initialState , action: CurrencyReducersTypes): CurrencyState => {\r\n\r\n    switch (action.type) {\r\n\r\n        case ACTIONS_TYPE.CHANGE_CURRENCY_FIELD_TYPE:\r\n            return {\r\n                ...state ,\r\n                ...action.payload\r\n            }\r\n        case ACTIONS_TYPE.CHANGE_CHANGE_ACTION:\r\n        case ACTIONS_TYPE.CHANGE_CURRENT_CURRENCY:\r\n            return {\r\n                //копируем стейт и обновляем пэйлоад\r\n                ...state ,\r\n                ...action.payload ,\r\n                //зануляем поля при смене направления операции\r\n                amountOfBYN: '' ,\r\n                amountOfCurrency: '' ,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//export const selectCurrencies = (store: IGlobalState)=>store.currency.currencies\r\nexport const selectAll = (store: IGlobalState)=>store.currency","import { combineReducers, createStore } from \"redux\";\r\nimport { currencyReducer } from './currencyReducer';\r\n\r\nconst reducers = combineReducers({\r\n    currency: currencyReducer,\r\n});\r\nexport type IGlobalState = ReturnType<typeof reducers>;\r\n\r\nexport const store = createStore(reducers);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/state';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}